generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum RoleType {
  TEAMLEAD
  MEMBER
}

model Role {
  id   Int      @id @default(autoincrement())
  role RoleType @unique

  users User[] // Opposite relation for Prisma

  @@map("roles")
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  name          String
  password      String
  roleId        Int      // Foreign key to Role
  role          Role     @relation(fields: [roleId], references: [id])
  isEmailVerified Boolean @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Minimal relation fields required by Prisma
  sentKudos     Kudos[] @relation("KudosSender")
  receivedKudos Kudos[] @relation("KudosRecipient")

  @@map("users")
}

model Category {
  id   Int     @id @default(autoincrement())
  name String  @unique

  kudos Kudos[] // Relation to Kudos

  @@map("categories")
}

model Kudos {
  id          String   @id @default(uuid())
  categoryId  Int      // Foreign key to Category
  senderId    String
  recipientId String
  message     String
  createdAt   DateTime @default(now())

  category    Category @relation(fields: [categoryId], references: [id])
  sender      User     @relation("KudosSender", fields: [senderId], references: [id])
  recipient   User     @relation("KudosRecipient", fields: [recipientId], references: [id])

  @@map("kudos")
  @@index([senderId])
  @@index([recipientId])
  @@index([categoryId])
}